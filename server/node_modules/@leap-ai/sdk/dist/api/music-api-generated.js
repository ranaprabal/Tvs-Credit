"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Leap
 * The Official Leap API
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This file is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MusicApiGenerated = exports.MusicApiFactory = exports.MusicApiFp = exports.MusicApiAxiosParamCreator = void 0;
const axios_1 = require("axios");
// Some imports not used depending on template conditions
// @ts-ignore
const common_1 = require("../common");
const FormData = require("form-data");
// @ts-ignore
const base_1 = require("../base");
const requestBeforeHook_1 = require("../requestBeforeHook");
/**
 * MusicApi - axios parameter creator
 * @export
 */
const MusicApiAxiosParamCreator = function (configuration) {
    return {
        /**
         * Get a specific music generation job.
         * @summary Get a Music Generation Job
         * @param {string} inferenceId The ID of the music generation job to retrieve. This is the same ID returned when you submit a job.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        findOne: (inferenceId, options = {}) => __awaiter(this, void 0, void 0, function* () {
            // verify required parameter 'inferenceId' is not null or undefined
            (0, common_1.assertParamExists)('findOne', 'inferenceId', inferenceId);
            const localVarPath = `/api/v1/music/{inferenceId}`
                .replace(`{${"inferenceId"}}`, encodeURIComponent(String(inferenceId !== undefined ? inferenceId : `-inferenceId-`)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);
            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { "User-Agent": configuration.userAgent } : {};
            const localVarQueryParameter = {};
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
            (0, requestBeforeHook_1.requestBeforeHook)({
                queryParameters: localVarQueryParameter,
                requestConfig: localVarRequestOptions,
                path: localVarPath,
                configuration
            });
            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
            return {
                url: (0, common_1.toPathString)(localVarUrlObj),
                options: localVarRequestOptions,
            };
        }),
        /**
         * Generate music by providing a text description. Generations usually take bettween 1-3 minutes. Total generation time depends on the `duration` you select. This endpoint will submit the generation job and return immediately. To retrieve the results you must provide a webhook URL or query/poll the [Get a Music Generation Job](https://reference.tryleap.ai/reference/musiccontroller_findoneaudio) endpoint.
         * @summary Generate Music
         * @param {CreateMusicgenInferenceDto} createMusicgenInferenceDto
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        generate: (createMusicgenInferenceDto, options = {}) => __awaiter(this, void 0, void 0, function* () {
            // verify required parameter 'createMusicgenInferenceDto' is not null or undefined
            (0, common_1.assertParamExists)('generate', 'createMusicgenInferenceDto', createMusicgenInferenceDto);
            const localVarPath = `/api/v1/music`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);
            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { "User-Agent": configuration.userAgent } : {};
            const localVarQueryParameter = {};
            // authentication bearer required
            // http bearer authentication required
            yield (0, common_1.setBearerAuthToObject)(localVarHeaderParameter, configuration);
            localVarHeaderParameter['Content-Type'] = 'application/json';
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
            (0, requestBeforeHook_1.requestBeforeHook)({
                requestBody: createMusicgenInferenceDto,
                queryParameters: localVarQueryParameter,
                requestConfig: localVarRequestOptions,
                path: localVarPath,
                configuration
            });
            localVarRequestOptions.data = (0, common_1.serializeDataIfNeeded)(createMusicgenInferenceDto, localVarRequestOptions, configuration);
            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
            return {
                url: (0, common_1.toPathString)(localVarUrlObj),
                options: localVarRequestOptions,
            };
        }),
        /**
         * List all music generation jobs for a workspace.
         * @summary List Music Generation Jobs
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listAll: (options = {}) => __awaiter(this, void 0, void 0, function* () {
            const localVarPath = `/api/v1/music`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);
            const localVarHeaderParameter = configuration && !(0, common_1.isBrowser)() ? { "User-Agent": configuration.userAgent } : {};
            const localVarQueryParameter = {};
            // authentication bearer required
            // http bearer authentication required
            yield (0, common_1.setBearerAuthToObject)(localVarHeaderParameter, configuration);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
            (0, requestBeforeHook_1.requestBeforeHook)({
                queryParameters: localVarQueryParameter,
                requestConfig: localVarRequestOptions,
                path: localVarPath,
                configuration
            });
            (0, common_1.setSearchParams)(localVarUrlObj, localVarQueryParameter);
            return {
                url: (0, common_1.toPathString)(localVarUrlObj),
                options: localVarRequestOptions,
            };
        }),
    };
};
exports.MusicApiAxiosParamCreator = MusicApiAxiosParamCreator;
/**
 * MusicApi - functional programming interface
 * @export
 */
const MusicApiFp = function (configuration) {
    const localVarAxiosParamCreator = (0, exports.MusicApiAxiosParamCreator)(configuration);
    return {
        /**
         * Get a specific music generation job.
         * @summary Get a Music Generation Job
         * @param {MusicApiFindOneRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        findOne(requestParameters, options) {
            return __awaiter(this, void 0, void 0, function* () {
                const localVarAxiosArgs = yield localVarAxiosParamCreator.findOne(requestParameters.inferenceId, options);
                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);
            });
        },
        /**
         * Generate music by providing a text description. Generations usually take bettween 1-3 minutes. Total generation time depends on the `duration` you select. This endpoint will submit the generation job and return immediately. To retrieve the results you must provide a webhook URL or query/poll the [Get a Music Generation Job](https://reference.tryleap.ai/reference/musiccontroller_findoneaudio) endpoint.
         * @summary Generate Music
         * @param {MusicApiGenerateRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        generate(requestParameters, options) {
            return __awaiter(this, void 0, void 0, function* () {
                const localVarAxiosArgs = yield localVarAxiosParamCreator.generate(requestParameters, options);
                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);
            });
        },
        /**
         * List all music generation jobs for a workspace.
         * @summary List Music Generation Jobs
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listAll(options) {
            return __awaiter(this, void 0, void 0, function* () {
                const localVarAxiosArgs = yield localVarAxiosParamCreator.listAll(options);
                return (0, common_1.createRequestFunction)(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);
            });
        },
    };
};
exports.MusicApiFp = MusicApiFp;
/**
 * MusicApi - factory interface
 * @export
 */
const MusicApiFactory = function (configuration, basePath, axios) {
    const localVarFp = (0, exports.MusicApiFp)(configuration);
    return {
        /**
         * Get a specific music generation job.
         * @summary Get a Music Generation Job
         * @param {MusicApiFindOneRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        findOne(requestParameters, options) {
            return localVarFp.findOne(requestParameters, options).then((request) => request(axios, basePath));
        },
        /**
         * Generate music by providing a text description. Generations usually take bettween 1-3 minutes. Total generation time depends on the `duration` you select. This endpoint will submit the generation job and return immediately. To retrieve the results you must provide a webhook URL or query/poll the [Get a Music Generation Job](https://reference.tryleap.ai/reference/musiccontroller_findoneaudio) endpoint.
         * @summary Generate Music
         * @param {MusicApiGenerateRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        generate(requestParameters, options) {
            return localVarFp.generate(requestParameters, options).then((request) => request(axios, basePath));
        },
        /**
         * List all music generation jobs for a workspace.
         * @summary List Music Generation Jobs
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listAll(options) {
            return localVarFp.listAll(options).then((request) => request(axios, basePath));
        },
    };
};
exports.MusicApiFactory = MusicApiFactory;
/**
 * MusicApiGenerated - object-oriented interface
 * @export
 * @class MusicApiGenerated
 * @extends {BaseAPI}
 */
class MusicApiGenerated extends base_1.BaseAPI {
    /**
     * Get a specific music generation job.
     * @summary Get a Music Generation Job
     * @param {MusicApiFindOneRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MusicApiGenerated
     */
    findOne(requestParameters, options) {
        return (0, exports.MusicApiFp)(this.configuration).findOne(requestParameters, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * Generate music by providing a text description. Generations usually take bettween 1-3 minutes. Total generation time depends on the `duration` you select. This endpoint will submit the generation job and return immediately. To retrieve the results you must provide a webhook URL or query/poll the [Get a Music Generation Job](https://reference.tryleap.ai/reference/musiccontroller_findoneaudio) endpoint.
     * @summary Generate Music
     * @param {MusicApiGenerateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MusicApiGenerated
     */
    generate(requestParameters, options) {
        return (0, exports.MusicApiFp)(this.configuration).generate(requestParameters, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * List all music generation jobs for a workspace.
     * @summary List Music Generation Jobs
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MusicApiGenerated
     */
    listAll(options) {
        return (0, exports.MusicApiFp)(this.configuration).listAll(options).then((request) => request(this.axios, this.basePath));
    }
}
exports.MusicApiGenerated = MusicApiGenerated;
